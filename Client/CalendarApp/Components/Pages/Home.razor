@page "/"
@using CalendarApp.Auth
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider SimpleAuthProvider
@rendermode InteractiveServer

<link href="home.css" rel="stylesheet" />

<PageTitle>Home</PageTitle>

<AuthorizeView>
    <Authorized>
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h3>Welcome, @context?.User?.Identity?.Name!</h3>
            <button class="btn btn-danger" @onclick="LogoutAsync">Log out</button>
        </div>
        <p>You can now access the platform's features:</p>
        <ul class="list-group">
            <li class="list-group-item"><a href="calendar">View Calendar</a></li>
            <li class="list-group-item"><a href="groups">Manage Groups</a></li>
        </ul>
    </Authorized>
    <NotAuthorized>
        <h3>Please log in to access the platform</h3>
        <div class="d-flex align-items-center gap-3 mt-3">
            <button class="btn btn-primary" @onclick='() => NavigationManager.NavigateTo("login")'>Log in</button>
            <button class="btn btn-secondary" @onclick='() => NavigationManager.NavigateTo("register")'>Register</button>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task LogoutAsync()
    {
        try
        {
            await ((SimpleAuthProvider)SimpleAuthProvider).LogoutAsync();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error during logout: {ex.Message}");
        }
    }
}